'use client'; import { useState, useEffect } from 'react'; import Link from 'next/link'; import { productsAPI } from '@/utils/api'; interface Category { id: number; name: string; description: string; } interface Product { id: number; name: string; description: string; price: string; image_url: string; category_name: string; stock_quantity: number; } export default function Categories() { const [categories, setCategories] = useState<Category[]>([]); const [products, setProducts] = useState<Product[]>([]); const [selectedCategory, setSelectedCategory] = useState<string>(''); const [loading, setLoading] = useState(true); useEffect(() => { fetchCategories(); fetchProducts(); }, []); const fetchCategories = async () => { try { const response = await productsAPI.getCategories(); setCategories(response.data); } catch (error) { console.error('Error fetching categories:', error); } }; const fetchProducts = async () => { try { const response = await productsAPI.getAll(); setProducts(response.data); } catch (error) { console.error('Error fetching products:', error); } finally { setLoading(false); } }; const filteredProducts = selectedCategory ? products.filter(product => product.category_name === selectedCategory) : products; const getCategoryIcon = (categoryName: string) => { switch (categoryName.toLowerCase()) { case 'electronics': return '📱'; case 'clothing': return '👕'; case 'books': return '📚'; case 'home & garden': return '🏠'; case 'sports': return '⚽'; default: return '📦'; } }; if (loading) { return ( <div className="min-h-screen flex items-center justify-center"> <div className="text-xl">Loading categories...</div> </div> ); } return ( <div className="min-h-screen bg-gray-50"> <div className="max-w-7xl mx-auto px-4 py-8"> <h1 className="text-3xl font-bold text-gray-800 mb-8">Shop by Categories</h1> {/* Category Grid */} <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6 mb-12"> <button onClick={() => setSelectedCategory('')} className={`p-6 rounded-lg border-2 transition-colors ${ selectedCategory === '' ? 'border-green-500 bg-green-50' : 'border-gray-200 bg-white hover:border-green-300' }`} > <div className="text-4xl mb-2">🛍️</div> <h3 className="font-semibold text-gray-800">All Products</h3> <p className="text-sm text-gray-500">{products.length} items</p> </button> {categories.map((category) => ( <button key={category.id} onClick={() => setSelectedCategory(category.name)} className={`p-6 rounded-lg border-2 transition-colors ${ selectedCategory === category.name ? 'border-green-500 bg-green-50' : 'border-gray-200 bg-white hover:border-green-300' }`} > <div className="text-4xl mb-2">{getCategoryIcon(category.name)}</div> <h3 className="font-semibold text-gray-800">{category.name}</h3> <p className="text-sm text-gray-500"> {products.filter(p => p.category_name === category.name).length} items </p> </button> ))} </div> {/* Selected Category Products */} <div className="mb-6"> <h2 className="text-2xl font-bold text-gray-800 mb-4"> {selectedCategory || 'All Products'} <span className="text-lg font-normal text-gray-500 ml-2"> ({filteredProducts.length} items) </span> </h2> </div> {/* Products Grid */} <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6"> {filteredProducts.map((product) => ( <div key={product.id} className="bg-white rounded-lg border border-gray-200 overflow-hidden hover:shadow-lg transition-shadow"> <div className="relative h-48 bg-gray-50 flex items-center justify-center p-4"> <div className="text-gray-400 text-center"> <div className="text-6xl mb-2">{getCategoryIcon(product.category_name)}</div> </div> </div> <div className="p-4"> <h3 className="text-lg font-semibold text-gray-800 mb-1"> {product.name} </h3> <p className="text-gray-500 text-sm mb-3 line-clamp-2"> {product.description} </p> <div className="flex items-center justify-between mb-4"> <span className="text-xl font-bold text-gray-800"> ${product.price} </span> <span className="text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded"> {product.category_name} </span> </div> <Link href={`/products/${product.id}`} className="w-full bg-green-700 text-white py-2 px-4 rounded-md font-medium hover:bg-green-800 transition-colors text-center block" > View Product </Link> </div> </div> ))} </div> {filteredProducts.length === 0 && ( <div className="text-center py-12"> <div className="text-6xl mb-4">📦</div> <p className="text-gray-500 text-lg">No products found in this category</p> </div> )} </div> </div> ); }